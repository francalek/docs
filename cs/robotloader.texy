RobotLoader: autoloading tříd
*****************************

<div class=perex>

RobotLoader je nástroj, který vám zajistí komfort automatického načítání tříd pro celou vaši aplikaci včetně knihoven třetích stran.

- zbavíme se všech `require`
- budou se načítat jen potřebné skripty
- nevyžaduje se žádná striktní konvence pojmenování souborů

</div>

Můžeme tedy zapomenout na tyto známé bloky kódu:

```php
require_once 'Utils/Page.php';
require_once 'Utils/Style.php';
require_once 'Utils/Paginator.php';
...
```

Instalace
---------

```shell
composer require nette/robot-loader
```

Použití
-------

Podobně, jako Google robot prochází a indexuje webové stránky, tak i [RobotLoader |api:Nette\Loaders\RobotLoader] prochází všechny PHP skripty a zaznamenává si, které třídy, rozhraní a traity v nich našel. Výsledky bádání si poté uloží do cache a použije při dalším požadavku. Stačí tedy určit, které adresáře má procházet a kam ukládat cache:

```php
$loader = new Nette\Loaders\RobotLoader;

// adresáře, které má RobotLoader indexovat (včetně podadresářů)
$loader->addDirectory(__DIR__ . '/app');
$loader->addDirectory(__DIR__ . '/libs');

// nastavíme cachování do adresáře 'temp'
$loader->setTempDirectory(__DIR__ . '/temp');
$loader->register(); // spustíme RobotLoader
```

A to je vše, od této chvíle nemusíme používat `require`. Paráda!

Pokud RobotLoader narazí při indexaci na duplicitní název třídy, vyhodí výjimku a informuje vás o tom.

Nastavením `$loader->setAutoRefresh(true / false)` určíme, zda má RobotLoader reindexovat soubory, když narazí na novou třídu. To má být vypnuto na produkčních serverech. Proto je nutné při nahrání nové verze aplikace na hosting smazat cache.

Pokud chcete, aby RobotLoader přeskočil nějaký adresář, použijte `$loader->excludeDirectory('temp')`.

Ve výchozím nastavení RobotLoader hlásí chyby v souborech PHP vyhozením výjimky `ParseError`. To lze potlačit pomocí `$loader->reportParseErrors(false)`.


Nette aplikace
--------------

Uvnitř Nette aplikace, kde se používá v zaváděcím souboru `Bootstrap.php` objekt `$configurator`, lze zápis zjednodušit:

```php
$configurator = new Nette\Configurator;
...
$configurator->setTempDirectory(__DIR__ . '/../temp');
$configurator->createRobotLoader()
	->addDirectory(__DIR__)
	->addDirectory(__DIR__ . '/../libs')
	->register();
```


Analýza PHP souborů
-------------------

RobotLoader lze také použít čistě k vyhledávání tříd, rozhraní a trait v souborech PHP bez využívání funkce autoloadingu:

```php
$loader = new Nette\Loaders\RobotLoader;
$loader->addDirectory(__DIR__ . '/app');

// prohledá adresáře na třídy / rozhraní / traity
$loader->rebuild();

// vrací pole dvojic třída => název souboru
$res = $loader->getIndexedClasses();
```

Při opětovném skenování souborů využije cache a nemodifikované soubory nebudou opakovaně analyzovány:

```php
$loader = new Nette\Loaders\RobotLoader;
$loader->addDirectory(__DIR__ . '/app');
$loader->setTempDirectory(__DIR__ . '/temp');

// prohledá adresáře s využitím cache
$loader->refresh();

// vrací pole dvojic třída => název souboru
$res = $loader->getIndexedClasses();
```

{{composer: nette/robot-loader}}
