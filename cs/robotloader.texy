RobotLoader: autoloading tříd
*****************************

<div class=perex>

RobotLoader je nástroj, který vám zajistí komfort automatického načítání tříd pro celou vaši aplikaci včetně knihoven třetích stran.

- zbavíme se všech `require`
- budou se načítat jen potřebné skripty
- nevyžaduje se žádná striktní konvence pojmenování souborů
- lze mít i více tříd v jednom souboru

</div>

[RobotLoader |api:Nette\Loaders\RobotLoader] je nesmírně pohodlný a návykový!

Můžeme tedy zapomenout na tyto známé bloky kódu:

```php
require_once 'Utils/Page.php';
require_once 'Utils/Style.php';
require_once 'Utils/Paginator.php';
...
```

Podobně, jako Google robot prochází a indexuje webové stránky, tak i RobotLoader prochází všechny PHP skripty a zaznamenává si, které třídy, rozhraní a traity v nich našel. Výsledky bádání si poté uloží do cache a použije při dalším požadavku. Stačí tedy určit, které adresáře má procházet a kam ukládat cache:

```php
$loader = new Nette\Loaders\RobotLoader;

// přidáme adresáře, které má RobotLoader indexovat
$loader->addDirectory(__DIR__ . '/app');
$loader->addDirectory(__DIR__ . '/libs');

// nastavíme cachování na disk do adresáře 'temp'
$loader->setCacheStorage(new Nette\Caching\Storages\FileStorage(__DIR__ . '/temp'));
$loader->register(); // spustíme RobotLoader
```

A to je vše, od této chvíle nemusíme používat `require`. Paráda!

Pokud RobotLoader narazí při indexaci na duplicitní název třídy, vyhodí výjimku a informuje vás o tom.

Proměnná `$loader->autoRebuild` určuje, zda má RobotLoader při dotazu na neexistující třídu znovu prozkoumat všechny skripty. Na produkčním serveru je tato vlastnost standardně vypnutá.

.[note]
Proto je nutné při nahrání nové verze aplikace na web smazat cache.

Pokud chcete instruovat RobotLoader, aby některé adresáře přeskočil, vytvořte v příslušném adresáři soubor `netterobots.txt`:

```
Disallow: /Zend
```

Od této chvíle se nebude indexovat adresář Zend.


Nette aplikace
--------------

Uvnitř Nette aplikace, kde se používá v zaváděcím souboru `bootstrap.php` objekt `$configurator`, lze zápis zjednodušit:

```php
$configurator = new Nette\Configurator;
...
$configurator->setTempDirectory(__DIR__ . '/../temp');
$configurator->createRobotLoader()
	->addDirectory(__DIR__)
	->addDirectory(__DIR__ . '/../libs')
	->register();
```



{{composer: nette/robot-loader}}
